import FontColorModule
import time
import os
import winreg
import shutil


dir = os.path.dirname(__file__)
expfolder = dir + '\\Exploit'       #Exploit文件夹名称
lettercolor = FontColorModule.ChangeColor()
moduleprotect = ['ExploitModule.py', 'FontColorModule.py', 'OSdetectModule.py', 'ScanModuletest.py', 'ServiceAnalyze.py', 'UiProcess.py', 'main.ui', 'requirements.txt', 'readme.md', 'readme.html', 'jiaran.png']     #保护程序各个功能模块源码被删除


class ExploitSet():
    def __init__(self, fname, desktop):
        self.filename = fname
        self.desktopdir = desktop

        
    def Loadin(self):
        if not os.path.exists(expfolder):       #创建Exploit文件夹,如存在,则跳过
            os.mkdir(expfolder)
        else:
            pass
        try:
            temp = os.path.split(self.filename[0])
            target = expfolder + '\\' + str(temp[1])
            #print('target name is:' + str(target))
            shutil.copyfile(str(self.filename[0]), str(target))     #复制选择文件到Exploit文件夹,如存在,则覆盖
            gui.ui.outwindow.append(lettercolor.Res + '[+]File import successful.' + lettercolor.ColorEnd)
        except:
            gui.ui.outwindow.append(lettercolor.Warn + '[-]Some Errors Occurred.' + ' >>> ' + \
            time.strftime('%Y-%m-%d %H:%M:%S', time.localtime()) + lettercolor.ColorEnd)
            return
    

    def Loadout(self):
        try:
            temp = os.path.split(self.filename[0])
            target = self.desktopdir + '\\' + str(temp[1])
            shutil.copyfile(str(self.filename[0]), str(target))     #复制选择文件到桌面,如存在,则覆盖
            gui.ui.outwindow.append(lettercolor.Res + '[+]File export successful.' + lettercolor.ColorEnd)
        except:
            gui.ui.outwindow.append(lettercolor.Warn + '[-]Some Errors Occurred.' + ' >>> ' + \
            time.strftime('%Y-%m-%d %H:%M:%S', time.localtime()) + lettercolor.ColorEnd)
            return


    def DeleteFile(self):
        try:
            temp = os.path.split(self.filename[0])
            target = expfolder + '\\' + str(temp[1])
            #print('remove done.')
            for i in moduleprotect:
                if str(temp[1]) == i:
                    gui.ui.outwindow.append(lettercolor.Warn + '[-]ModuleFile {0} is Protected.'.format(temp[1]) + ' >>> ' + \
                    time.strftime('%Y-%m-%d %H:%M:%S', time.localtime()) + lettercolor.ColorEnd)
                    #print('file delete undone')
                    return
                else:
                    pass
            os.remove(str(target))
            gui.ui.outwindow.append(lettercolor.Res + '[+]File {0} delete successful.'.format(temp[1]) + lettercolor.ColorEnd)
            return
        except:
            gui.ui.outwindow.append(lettercolor.Warn + '[-]Some Errors Occurred.' + ' >>> ' + \
            time.strftime('%Y-%m-%d %H:%M:%S', time.localtime()) + lettercolor.ColorEnd)
            return
        
        

def UIreceive(GUI):      #接收GUI实例
    global gui
    gui = GUI
    return gui


def get_desktop():      #获取当前桌面路径
    key = winreg.OpenKey(winreg.HKEY_CURRENT_USER,
                         r'Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders')
    desktopdir = winreg.QueryValueEx(key,"Desktop")[0]
    return desktopdir


def StartModule(select, fname):
    filename = fname
    desktopdir = get_desktop()
    exp = ExploitSet(filename, desktopdir)
    if select == 'import':
        exp.Loadin()
    elif select == 'export':
        exp.Loadout()
    elif select == 'delete':
        exp.DeleteFile()
    else:
        gui.ui.outwindow.append(lettercolor.Warn + '[-]Invalid Input.' + ' >>> ' + \
        time.strftime('%Y-%m-%d %H:%M:%S', time.localtime()) + lettercolor.ColorEnd)
        return
    time.sleep(0.1)
    gui.ui.outwindow.append(lettercolor.Mes + '[*]ExploitModule Finished.' + ' >>> ' + \
    time.strftime('%Y-%m-%d %H:%M:%S', time.localtime()) + lettercolor.ColorEnd)